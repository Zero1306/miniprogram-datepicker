const _ = require('./utils')

const RealDate = Date

const years = ['1901年', '1902年', '1903年', '1904年', '1905年', '1906年', '1907年', '1908年', '1909年', '1910年', '1911年', '1912年', '1913年', '1914年', '1915年', '1916年', '1917年', '1918年', '1919年', '1920年', '1921年', '1922年', '1923年', '1924年', '1925年', '1926年', '1927年', '1928年', '1929年', '1930年', '1931年', '1932年', '1933年', '1934年', '1935年', '1936年', '1937年', '1938年', '1939年', '1940年', '1941年', '1942年', '1943年', '1944年', '1945年', '1946年', '1947年', '1948年', '1949年', '1950年', '1951年', '1952年', '1953年', '1954年', '1955年', '1956年', '1957年', '1958年', '1959年', '1960年', '1961年', '1962年', '1963年', '1964年', '1965年', '1966年', '1967年', '1968年', '1969年', '1970年', '1971年', '1972年', '1973年', '1974年', '1975年', '1976年', '1977年', '1978年', '1979年', '1980年', '1981年', '1982年', '1983年', '1984年', '1985年', '1986年', '1987年', '1988年', '1989年', '1990年', '1991年', '1992年', '1993年', '1994年', '1995年', '1996年', '1997年', '1998年', '1999年', '2000年', '2001年', '2002年', '2003年', '2004年', '2005年', '2006年', '2007年', '2008年', '2009年', '2010年', '2011年', '2012年', '2013年', '2014年', '2015年', '2016年', '2017年', '2018年', '2019年', '2020年', '2021年', '2022年', '2023年', '2024年', '2025年', '2026年', '2027年', '2028年', '2029年', '2030年', '2031年', '2032年', '2033年', '2034年', '2035年', '2036年', '2037年', '2038年', '2039年', '2040年', '2041年', '2042年', '2043年', '2044年', '2045年', '2046年', '2047年', '2048年', '2049年', '2050年', '2051年', '2052年', '2053年', '2054年', '2055年', '2056年', '2057年', '2058年', '2059年', '2060年', '2061年', '2062年', '2063年', '2064年', '2065年', '2066年', '2067年', '2068年', '2069年', '2070年', '2071年', '2072年', '2073年', '2074年', '2075年', '2076年', '2077年', '2078年', '2079年', '2080年', '2081年', '2082年', '2083年', '2084年', '2085年', '2086年', '2087年', '2088年', '2089年', '2090年', '2091年', '2092年', '2093年', '2094年', '2095年', '2096年', '2097年', '2098年', '2099年', '2100年']
const months = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']
const chinaMonths = ['正月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '冬月', '腊月']
const days = ['1日 星期四', '2日 星期五', '3日 星期六', '4日 星期日', '5日 星期一', '6日 星期二', '7日 星期三', '8日 星期四', '9日 星期五', '10日 星期六', '11日 星期日', '12日 星期一', '13日 星期二', '14日 星期三', '15日 星期四', '16日 星期五', '17日 星期六', '18日 星期日', '19日 星期一', '20日 星期二', '21日 星期三', '22日 星期四', '23日 星期五', '24日 星期六', '25日 星期日', '26日 星期一', '27日 星期二', '28日 星期三', '29日 星期四', '30日 星期五']
const chinaDays = ['初一', '初二', '初三', '初四', '初五', '初六', '初七', '初八', '初九', '初十', '十一', '十二', '十三', '十四', '十五', '十六', '十七', '十八', '十九', '二十', '廿一', '廿二', '廿三', '廿四', '廿五', '廿六', '廿七', '廿八', '廿九', '三十']

let componentId
let component
let times = 0

beforeAll(async () => {
  componentId = await _.load('index', 'comp')
})

afterEach(() => {
  global.Date = RealDate
  times = 0
})

test.each([
  ['2016-09-01', true, [years, chinaMonths, chinaDays], [115, 8, 0]],
  ['2016-09-01', false, [years, months, days], [115, 8, 0]],
  ['', true, [years, chinaMonths, chinaDays], [115, 7, 0]],
  ['', false, [years, months, days], [115, 8, 0]],
])('render', async (value, chinese, multiArray, multiIndex) => {
  // mock date
  if (value === '') {
    global.Date = class extends Date {
      constructor(...props) {
        super()
        const mock = times === 0 ? new RealDate('2016-09-01') : new RealDate(...props) // mock date once
        times++
        return mock
      }
    }
  }

  component = _.render(componentId, {
    value,
    chinese,
  })

  const parent = document.createElement('parent-wrapper')
  component.attach(parent)

  expect(component.data)
    .toEqual({
      value,
      chinese,
      multiArray,
      multiIndex,
    })

  expect(_.match(component.dom, '<wx-picker class="picker-class"></wx-picker>'))
    .toBe(true)
})
